version: "3.7"

services:

# app
  app:
    build:
      args:
        user: laravel-user
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: app
    container_name: laravel-app
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: laravel.test
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ~/.ssh:/root/.ssh
    depends_on:
      - db
      - redis  
    networks:
      - laravel

# DATABASE (MySQL)
  db:
    image: mysql:8.0
    container_name: laravel-db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/logs:/var/log/mysql
      - ./docker/mysql/ql:/docker-entrypoint-initdb.d
    networks:
      - laravel
      
# Nginx     
  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/conf.d/ssl
      - ./docker/nginx/phpmyadmin.conf:/etc/nginx/conf.d/phpmyadmin.conf
    networks:
      - laravel

# phpMyAdmin      
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel-phpmyadmin
    ports:
        - 8080:80
    links:
        - db
    restart: unless-stopped
    environment:
        PMA_HOST: db
        #PMA_USER: ${DB_USERNAME}
        #PMA_PASSWORD: ${DB_PASSWORD}
        PMA_PORT: 3306
        PMA_ARBITRARY: 1
    networks:
        - laravel

# Redis
  redis:
    image: "redis:alpine"
    container_name: laravel-redis
    restart: unless-stopped
    volumes:
        - ./docker/redis/data:/data
    ports:
      - "6379:6379"
    networks:
      - laravel      
networks:
  laravel:
    driver: bridge
